/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CrowdFunding, CrowdFundingInterface } from "../CrowdFunding";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "ProjectClosed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "closeProject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_goal",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_image",
        type: "string",
      },
    ],
    name: "createProject",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getInvestors",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProjects",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "goal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentValue",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "investors",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "investments",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "isClosed",
            type: "bool",
          },
        ],
        internalType: "struct CrowdFunding.Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "investToProject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfProjects",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "projects",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "goal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentValue",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "image",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isClosed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b50611d10806100256000396000f3fe60806040526004361061007b5760003560e01c806399d985da1161004e57806399d985da14610149578063db5e4c7f14610165578063dcc6012814610190578063f64bc508146101bb5761007b565b8063107046bd146100805780631139de55146100c457806312065fe01461010257806393dc12e61461012d575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610e82565b6101f8565b6040516100bb989796959493929190610faa565b60405180910390f35b3480156100d057600080fd5b506100eb60048036038101906100e69190610e82565b610405565b6040516100f99291906111b9565b60405180910390f35b34801561010e57600080fd5b50610117610515565b60405161012491906111f0565b60405180910390f35b61014760048036038101906101429190610e82565b61051d565b005b610163600480360381019061015e9190610e82565b6107ca565b005b34801561017157600080fd5b5061017a610892565b60405161018791906111f0565b60405180910390f35b34801561019c57600080fd5b506101a5610898565b6040516101b291906114fa565b60405180910390f35b3480156101c757600080fd5b506101e260048036038101906101dd919061167d565b610c89565b6040516101ef91906111f0565b60405180910390f35b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546102419061178d565b80601f016020809104026020016040519081016040528092919081815260200182805461026d9061178d565b80156102ba5780601f1061028f576101008083540402835291602001916102ba565b820191906000526020600020905b81548152906001019060200180831161029d57829003601f168201915b5050505050908060020180546102cf9061178d565b80601f01602080910402602001604051908101604052809291908181526020018280546102fb9061178d565b80156103485780601f1061031d57610100808354040283529160200191610348565b820191906000526020600020905b81548152906001019060200180831161032b57829003601f168201915b50505050509080600301549080600401549080600501549080600601805461036f9061178d565b80601f016020809104026020016040519081016040528092919081815260200182805461039b9061178d565b80156103e85780601f106103bd576101008083540402835291602001916103e8565b820191906000526020600020905b8154815290600101906020018083116103cb57829003601f168201915b5050505050908060090160009054906101000a900460ff16905088565b606080600080848152602001908152602001600020600701600080858152602001908152602001600020600801818054806020026020016040519081016040528092919081815260200182805480156104b357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610469575b505050505091508080548060200260200160405190810160405280929190818152602001828054801561050557602002820191906000526020600020905b8154815260200190600101908083116104f1575b5050505050905091509150915091565b600047905090565b600080600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90611830565b60405180910390fd5b8060090160009054906101000a900460ff1615610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e9061189c565b60405180910390fd5b600081600401548260050154106106a0578160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc83600501549081150290604051600060405180830381858888f19350505050158015610696573d6000803e3d6000fd5b5060019050610772565b60005b826007018054905081101561076c578260070181815481106106c8576106c76118bc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc846008018381548110610722576107216118bc565b5b90600052602060002001549081150290604051600060405180830381858888f19350505050158015610758573d6000803e3d6000fd5b5080806107649061191a565b9150506106a3565b50600190505b808260090160006101000a81548160ff0219169083151502179055507fa10da3bd85a8a7569325abd94177d0bbf25fbded5a3f6622a5588ce2cf1153ba836040516107bd91906111f0565b60405180910390a1505050565b60003490506000806000848152602001908152602001600020905080600701339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806008018290806001815401808255809150506001900390600052602060002001600090919091909150558181600501546108859190611962565b8160050181905550505050565b60015481565b6060600060015467ffffffffffffffff8111156108b8576108b7611552565b5b6040519080825280602002602001820160405280156108f157816020015b6108de610dcd565b8152602001906001900390816108d65790505b50905060005b600154811015610c81576000806000838152602001908152602001600020905080604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461098a9061178d565b80601f01602080910402602001604051908101604052809291908181526020018280546109b69061178d565b8015610a035780601f106109d857610100808354040283529160200191610a03565b820191906000526020600020905b8154815290600101906020018083116109e657829003601f168201915b50505050508152602001600282018054610a1c9061178d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a489061178d565b8015610a955780601f10610a6a57610100808354040283529160200191610a95565b820191906000526020600020905b815481529060010190602001808311610a7857829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682018054610acc9061178d565b80601f0160208091040260200160405190810160405280929190818152602001828054610af89061178d565b8015610b455780601f10610b1a57610100808354040283529160200191610b45565b820191906000526020600020905b815481529060010190602001808311610b2857829003601f168201915b5050505050815260200160078201805480602002602001604051908101604052809291908181526020018280548015610bd357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b89575b5050505050815260200160088201805480602002602001604051908101604052809291908181526020018280548015610c2b57602002820191906000526020600020905b815481526020019060010190808311610c17575b505050505081526020016009820160009054906101000a900460ff161515151581525050838381518110610c6257610c616118bc565b5b6020026020010181905250508080610c799061191a565b9150506108f7565b508091505090565b6000806000806001548152602001908152602001600020905042816003015410610ce8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdf90611a08565b60405180910390fd5b878160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086816001019081610d3c9190611bd4565b5085816002019081610d4e9190611bd4565b508381600401819055508481600301819055506000816005018190555082816006019081610d7c9190611bd4565b5060008160090160006101000a81548160ff02191690831515021790555060016000815480929190610dad9061191a565b919050555060018054610dc09190611ca6565b9150509695505050505050565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160008152602001600081526020016060815260200160608152602001606081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610e5f81610e4c565b8114610e6a57600080fd5b50565b600081359050610e7c81610e56565b92915050565b600060208284031215610e9857610e97610e42565b5b6000610ea684828501610e6d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eda82610eaf565b9050919050565b610eea81610ecf565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f2a578082015181840152602081019050610f0f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f5282610ef0565b610f5c8185610efb565b9350610f6c818560208601610f0c565b610f7581610f36565b840191505092915050565b610f8981610e4c565b82525050565b60008115159050919050565b610fa481610f8f565b82525050565b600061010082019050610fc0600083018b610ee1565b8181036020830152610fd2818a610f47565b90508181036040830152610fe68189610f47565b9050610ff56060830188610f80565b6110026080830187610f80565b61100f60a0830186610f80565b81810360c08301526110218185610f47565b905061103060e0830184610f9b565b9998505050505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61107281610ecf565b82525050565b60006110848383611069565b60208301905092915050565b6000602082019050919050565b60006110a88261103d565b6110b28185611048565b93506110bd83611059565b8060005b838110156110ee5781516110d58882611078565b97506110e083611090565b9250506001810190506110c1565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61113081610e4c565b82525050565b60006111428383611127565b60208301905092915050565b6000602082019050919050565b6000611166826110fb565b6111708185611106565b935061117b83611117565b8060005b838110156111ac5781516111938882611136565b975061119e8361114e565b92505060018101905061117f565b5085935050505092915050565b600060408201905081810360008301526111d3818561109d565b905081810360208301526111e7818461115b565b90509392505050565b60006020820190506112056000830184610f80565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061125382610ef0565b61125d8185611237565b935061126d818560208601610f0c565b61127681610f36565b840191505092915050565b600082825260208201905092915050565b600061129d8261103d565b6112a78185611281565b93506112b283611059565b8060005b838110156112e35781516112ca8882611078565b97506112d583611090565b9250506001810190506112b6565b5085935050505092915050565b600082825260208201905092915050565b600061130c826110fb565b61131681856112f0565b935061132183611117565b8060005b838110156113525781516113398882611136565b97506113448361114e565b925050600181019050611325565b5085935050505092915050565b61136881610f8f565b82525050565b6000610140830160008301516113876000860182611069565b506020830151848203602086015261139f8282611248565b915050604083015184820360408601526113b98282611248565b91505060608301516113ce6060860182611127565b5060808301516113e16080860182611127565b5060a08301516113f460a0860182611127565b5060c083015184820360c086015261140c8282611248565b91505060e083015184820360e08601526114268282611292565b9150506101008301518482036101008601526114428282611301565b91505061012083015161145961012086018261135f565b508091505092915050565b6000611470838361136e565b905092915050565b6000602082019050919050565b60006114908261120b565b61149a8185611216565b9350836020820285016114ac85611227565b8060005b858110156114e857848403895281516114c98582611464565b94506114d483611478565b925060208a019950506001810190506114b0565b50829750879550505050505092915050565b600060208201905081810360008301526115148184611485565b905092915050565b61152581610ecf565b811461153057600080fd5b50565b6000813590506115428161151c565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61158a82610f36565b810181811067ffffffffffffffff821117156115a9576115a8611552565b5b80604052505050565b60006115bc610e38565b90506115c88282611581565b919050565b600067ffffffffffffffff8211156115e8576115e7611552565b5b6115f182610f36565b9050602081019050919050565b82818337600083830152505050565b600061162061161b846115cd565b6115b2565b90508281526020810184848401111561163c5761163b61154d565b5b6116478482856115fe565b509392505050565b600082601f83011261166457611663611548565b5b813561167484826020860161160d565b91505092915050565b60008060008060008060c0878903121561169a57611699610e42565b5b60006116a889828a01611533565b965050602087013567ffffffffffffffff8111156116c9576116c8610e47565b5b6116d589828a0161164f565b955050604087013567ffffffffffffffff8111156116f6576116f5610e47565b5b61170289828a0161164f565b945050606061171389828a01610e6d565b935050608061172489828a01610e6d565b92505060a087013567ffffffffffffffff81111561174557611744610e47565b5b61175189828a0161164f565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117a557607f821691505b6020821081036117b8576117b761175e565b5b50919050565b7f4f6e6c792070726f6a656374206f776e65722063616e20636c6f73652074686560008201527f2070726f6a656374000000000000000000000000000000000000000000000000602082015250565b600061181a602883610efb565b9150611825826117be565b604082019050919050565b600060208201905081810360008301526118498161180d565b9050919050565b7f50726f6a65637420697320616c726561647920636c6f73656400000000000000600082015250565b6000611886601983610efb565b915061189182611850565b602082019050919050565b600060208201905081810360008301526118b581611879565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061192582610e4c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611957576119566118eb565b5b600182019050919050565b600061196d82610e4c565b915061197883610e4c565b92508282019050808211156119905761198f6118eb565b5b92915050565b7f54686520646561646c696e652073686f756c642062652061206461746520696e60008201527f20746865206675747572652e0000000000000000000000000000000000000000602082015250565b60006119f2602c83610efb565b91506119fd82611996565b604082019050919050565b60006020820190508181036000830152611a21816119e5565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611a8a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a4d565b611a948683611a4d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611ad1611acc611ac784610e4c565b611aac565b610e4c565b9050919050565b6000819050919050565b611aeb83611ab6565b611aff611af782611ad8565b848454611a5a565b825550505050565b600090565b611b14611b07565b611b1f818484611ae2565b505050565b5b81811015611b4357611b38600082611b0c565b600181019050611b25565b5050565b601f821115611b8857611b5981611a28565b611b6284611a3d565b81016020851015611b71578190505b611b85611b7d85611a3d565b830182611b24565b50505b505050565b600082821c905092915050565b6000611bab60001984600802611b8d565b1980831691505092915050565b6000611bc48383611b9a565b9150826002028217905092915050565b611bdd82610ef0565b67ffffffffffffffff811115611bf657611bf5611552565b5b611c00825461178d565b611c0b828285611b47565b600060209050601f831160018114611c3e5760008415611c2c578287015190505b611c368582611bb8565b865550611c9e565b601f198416611c4c86611a28565b60005b82811015611c7457848901518255600182019150602085019450602081019050611c4f565b86831015611c915784890151611c8d601f891682611b9a565b8355505b6001600288020188555050505b505050505050565b6000611cb182610e4c565b9150611cbc83610e4c565b9250828203905081811115611cd457611cd36118eb565b5b9291505056fea26469706673582212202824a0ffd6165833c4de499bbfafb36cfca2c476221900955bd4af65dea8257564736f6c63430008120033";

type CrowdFundingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdFundingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrowdFunding__factory extends ContractFactory {
  constructor(...args: CrowdFundingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrowdFunding> {
    return super.deploy(overrides || {}) as Promise<CrowdFunding>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CrowdFunding {
    return super.attach(address) as CrowdFunding;
  }
  override connect(signer: Signer): CrowdFunding__factory {
    return super.connect(signer) as CrowdFunding__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdFundingInterface {
    return new utils.Interface(_abi) as CrowdFundingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdFunding {
    return new Contract(address, _abi, signerOrProvider) as CrowdFunding;
  }
}
